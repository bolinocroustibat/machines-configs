# Install HashiCorp repository and GPG keys
- name: Create directory for GPG keys
  file:
    path: /usr/share/keyrings
    state: directory
    mode: u=rwx,g=rx,o=rx

- name: Download HashiCorp GPG key
  get_url:
    url: https://apt.releases.hashicorp.com/gpg
    dest: /usr/share/keyrings/hashicorp-archive-keyring.gpg
    mode: u=rw,g=r,o=r

# Add HashiCorp repository for Consul installation
- name: Create HashiCorp repository configuration
  template:
    src: hashicorp.sources.j2
    dest: /etc/apt/sources.list.d/hashicorp.sources
    mode: u=rw,g=r,o=r

# Install Consul package
- name: Install Consul
  apt:
    name: consul
    state: present
    update_cache: true

# Create Consul configuration directory
- name: Create Consul configuration directory
  file:
    path: /etc/consul.d
    state: directory
    mode: u=rwx,g=rx,o=rx # 755

# Configure Consul servers (web-bolino and data-bolino)
# These servers form a 2-node cluster
- name: Copy Consul server configuration
  template:
    src: server.hcl.j2
    dest: /etc/consul.d/server.hcl
    mode: u=rw,g=r,o=r # 644
  notify: restart consul
  when: inventory_hostname in consul_server_hosts

# Configure Consul clients (bolino-vm3)
# Clients automatically connect to servers
- name: Copy Consul client configuration
  template:
    src: client.hcl.j2
    dest: /etc/consul.d/client.hcl
    mode: u=rw,g=r,o=r # 644
  notify: restart consul
  when: inventory_hostname not in consul_server_hosts

# Wait for Consul to start before continuing
# Required for ACL system initialization
- name: Wait for Consul to start
  wait_for:
    port: 8500
    timeout: 60
  when: inventory_hostname in consul_server_hosts

# Initialize ACL system on first server only
# This command generates a bootstrap token which is an admin token
# The token is extracted from the command output using grep and awk
- name: Bootstrap ACL system
  shell: consul acl bootstrap | grep SecretID | awk '{print $2}'
  register: bootstrap_token
  changed_when: true
  failed_when: false
  when: inventory_hostname == consul_server_hosts[0]
  # Ignore error if ACL system is already initialized
  ignore_errors: true

# Display bootstrap token in Ansible logs
# This token must be copied and added to secrets.yaml
- name: Display bootstrap token
  debug:
    msg: "Bootstrap token: {{ bootstrap_token.stdout }}"
  when: inventory_hostname == consul_server_hosts[0] and bootstrap_token.rc == 0

# Configure Nginx reverse proxy for web interface
- name: Copy Nginx configuration
  template:
    src: consul.adriencarpentier.com.conf.j2
    dest: /etc/nginx/sites-available/{{ consul_domain }}
    mode: u=rw,g=r,o=r # 644
  notify: reload nginx

# Enable Nginx site
- name: Enable Nginx site
  file:
    src: /etc/nginx/sites-available/{{ consul_domain }}
    dest: /etc/nginx/sites-enabled/{{ consul_domain }}
    state: link
  notify: reload nginx

# Install SSL certificate with Certbot
- name: Install SSL certificate with Certbot
  command: certbot --nginx -d {{ consul_domain }} --non-interactive --agree-tos --email me@adriencarpentier.com
  args:
    creates: /etc/letsencrypt/live/{{ consul_domain }}
  notify: reload nginx
