- name: Include Uptime Kuma secrets
  include_vars: secrets.yaml

- name: Ensure Uptime Kuma directory exists
  file:
    path: "/opt/uptime-kuma"
    state: directory
    mode: u=rwx,g=,o= # 700 (only the user can read, write and execute)

- name: Copy docker-compose.yml
  template:
    src: docker-compose.yml.j2
    dest: "/opt/uptime-kuma/docker-compose.yml"
    mode: u=rw,g=r,o=r # 644

- name: Pull latest Uptime Kuma image
  community.docker.docker_image:
    name: louislam/uptime-kuma:latest
    source: pull
    force_source: true
  register: uptime_kuma_image_result

- name: Stop and remove existing Uptime Kuma container
  community.docker.docker_container:
    name: uptime-kuma
    state: absent
  ignore_errors: true
  when: uptime_kuma_image_result.changed

- name: Recreate Uptime Kuma container with new image
  community.docker.docker_compose_v2:
    project_src: "/opt/uptime-kuma"
    state: present
    remove_orphans: true
    build: "never"
    pull: "always"
    recreate: always
  notify: Reload nginx config
  when: uptime_kuma_image_result.changed

- name: Clean up old Uptime Kuma images only
  shell: |
    # Get the current image ID being used by the container
    CURRENT_IMAGE=$(docker inspect uptime-kuma --format='{{.Image}}')

    # Remove all uptime-kuma images except the current one
    docker images louislam/uptime-kuma --format "table {{.Repository}}:{{.Tag}}\t{{.ID}}" | grep -v "$CURRENT_IMAGE" | awk '{print $1}' | xargs -r docker rmi
  args:
    executable: /bin/bash
  ignore_errors: true
  when: uptime_kuma_image_result.changed
