- name: Install Starship
  block:
    - name: Install Starship with homebrew
      when: ansible_os_family == "Darwin"
      homebrew:
        name: starship
        state: present

    - name: Download Starship install script
      when: ansible_os_family == "Debian"
      get_url:
        url: "https://starship.rs/install.sh"
        dest: "/tmp/starship_install.sh"
        mode: u=rwx,g=rx,o=rx

    - name: Install Starship system-wide
      when: ansible_os_family == "Debian"
      command: "sh /tmp/starship_install.sh --bin-dir /usr/local/bin -y"

    - name: Delete Starship install script
      when: ansible_os_family == "Debian"
      file:
        path: "/tmp/starship_install.sh"
        state: absent

- name: Configure Starship for root and github users
  loop:
    - { home: "/root", user: "root" }
    - { home: "/home/github", user: "github" }
  block:
    - name: Create .config directory for user
      file:
        path: "{{ item.home }}/.config"
        state: directory
        mode: "0755"
        owner: "{{ item.user }}"

    - name: Backup existing starship.toml if exists
      copy:
        remote_src: true
        src: "{{ item.home }}/.config/starship.toml"
        dest: "{{ item.home }}/.config/starship.toml_{{ ansible_date_time.iso8601 }}.bak"
        mode: preserve
      failed_when: false

    - name: Add starship.toml config file
      template:
        src: "starship_{{ 'local' if ansible_os_family == 'Darwin' else 'remote' }}.toml"
        dest: "{{ item.home }}/.config/starship.toml"
        mode: "0644"
        owner: "{{ item.user }}"

    - name: Add Starship to user's .zshrc file
      blockinfile:
        dest: "{{ item.home }}/.zshrc"
        block: "{{ lookup('template', '.zshrc.j2') }}"
        marker: "### {mark} Starship (Ansible-managed) ### "
        mode: "0644"
        create: true
        owner: "{{ item.user }}"
